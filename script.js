let allRecipes = [];

// –û—á–∏—â–µ–Ω–Ω—è –±–ª–æ–∫—É –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ—é –Ω–æ–≤–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤
function clearRecipes() {
    const container = document.getElementById('recipes');
    container.innerHTML = '';
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Å—ñ —Ä–µ—Ü–µ–ø—Ç–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
async function fetchAllRecipes() {
    try {
        const response = await fetch('http://localhost:8000/recipes');
        const recipes = await response.json();

        allRecipes = recipes.filter(r => r && Object.keys(r).length > 0);
        console.log('–£—Å—ñ —Ä–µ—Ü–µ–ø—Ç–∏ –ø—ñ—Å–ª—è –æ—á–∏—Å—Ç–∫–∏:', allRecipes);

        showDefaultMessage();
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—Å—ñ—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤:', error);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
function showDefaultMessage() {
    const container = document.getElementById('recipes');
    container.innerHTML = `
        <div style="text-align:center; padding:20px;">
            <p>üçΩ –û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç–∏!</p>
        </div>
    `;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è Drive
function cleanDriveLink(url) {
    if (!url) return '';
    return String(url)
        .replace(/\n/g, '')
        .replace(/\r/g, '')
        .replace(/\s+/g, '')
        .trim();
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —ñ –ø–æ–∫–∞–∑ —Ä–µ—Ü–µ–ø—Ç—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
function selectCategory(category) {
    const container = document.getElementById('recipes');
    clearRecipes();

    const selected = allRecipes.filter(r => 
        r["–∫–∞—Ç–µ–≥–æ—Ä—ñ—è"] && r["–∫–∞—Ç–µ–≥–æ—Ä—ñ—è"].toLowerCase().trim() === category.toLowerCase().trim()
    );

    console.log(`üîµ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ —Ä–µ—Ü–µ–ø—Ç—ñ–≤: ${selected.length}`);

    if (selected.length === 0) {
        container.innerHTML = "<p>–ù–µ–º–∞—î —Ä–µ—Ü–µ–ø—Ç—ñ–≤ —É —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó üò•</p>";
        return;
    }

    const recipesGrouped = {};

    selected.forEach(item => {
        const number = item["–Ω–æ–º–µ—Ä —Ä–µ—Ü–µ–ø—Ç—É"];
        if (!recipesGrouped[number]) {
            recipesGrouped[number] = {
                title: item["–Ω–∞–∑–≤–∞ —Ä–µ—Ü–µ–ø—Ç—É"],
                time: item["—á–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è"],
                ingredients: item["—ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏"],
                steps: []
            };
        }

        if (item["—Ç–∏–ø –±–ª–æ–∫—É"] === "—Ç–µ–∫—Å—Ç") {
            recipesGrouped[number].steps.push({
                type: "text",
                content: item["–∫–æ–Ω—Ç–µ–Ω—Ç"]
            });
        }
        if (item["—Ç–∏–ø –±–ª–æ–∫—É"] === "—Ñ–æ—Ç–æ") {
            recipesGrouped[number].steps.push({
                type: "image",
                content: item["–∫–æ–Ω—Ç–µ–Ω—Ç"]
            });
        }
    });

    // –ú–∞–ª—é—î–º–æ –∫–∞—Ä—Ç–∫–∏
    Object.values(recipesGrouped).forEach(recipe => {
        const recipeCard = document.createElement('div');
        recipeCard.className = 'recipe-card';

        let html = `
            <h2>${recipe.title || "–ë–µ–∑ –Ω–∞–∑–≤–∏"}</h2>
            <p><strong>–ß–∞—Å –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è:</strong> ${recipe.time || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</p>
            <p><strong>–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:</strong><br>${recipe.ingredients?.replace(/\n/g, "<br>") || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</p>
        `;

        recipe.steps.forEach(step => {
          if (step.type === "text") {
              html += `<p>${step.content}</p>`;
          } else if (step.type === "image") {
              const cleanUrl = cleanDriveLink(step.content);
              if (cleanUrl.startsWith("https://t.me/")) {
                  html += `<a href="${cleanUrl}" target="_blank"><img src="https://img.icons8.com/ios-filled/50/000000/telegram-app.png" alt="–§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç—É" style="max-width:100px; margin:10px 0;"></a>`;
              } else if (
                  cleanUrl.startsWith("https://i.imgur.com/") ||
                  cleanUrl.startsWith("https://i.postimg.cc/") ||
                  cleanUrl.startsWith("https://upload.wikimedia.org/")
              ) {
                  html += `<img src="${cleanUrl}" alt="–§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç—É" style="max-width:100%; border-radius:12px; margin:10px 0;">`;
              } else {
                  console.warn('–ù–µ–≤—ñ–¥–æ–º–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏:', cleanUrl);
              }
          }
      });
      

      
        recipeCard.innerHTML = html;
        container.appendChild(recipeCard);
    });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.onload = fetchAllRecipes;
